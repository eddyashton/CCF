steps:
- checkout: self
  clean: true
  submodules: true

- task: CMake@1
  displayName: CMake
  inputs:
    cmakeArgs: '-GNinja -DSAN=ON -DEXTENSIVE_TESTS=ON ..'

- script: ninja
  displayName: Ninja
  workingDirectory: build

- script: |
    python3.7 -m venv env
    source env/bin/activate
    pip install -U -r ../tests/requirements.txt
    ctest -VV --timeout 240 --no-compress-output -T Test
  displayName: CTest
  workingDirectory: build

- script: 'xsltproc --stringparam suiteName "$(Agent.MachineName)" ../tests/infra/ctest_to_junit.xslt Testing/*/Test.xml > JUnit_enclave.xml'
  displayName: XSLT
  workingDirectory: build
  condition: succeededOrFailed()

- script: |
    source env/bin/activate
    TEST_ENCLAVE=virtual ctest -VV -R client_test --timeout 240 --no-compress-output -T Test
  displayName: CTest
  workingDirectory: build

- script: 'xsltproc --stringparam suiteName "$(Agent.MachineName) Virtual" ../tests/infra/ctest_to_junit.xslt Testing/*/Test.xml > JUnit_virtual.xml'
  displayName: XSLT
  workingDirectory: build
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/JUnit_*.xml'
    publishRunAttachments: true
  condition: succeededOrFailed()

- script: |
    ls *_test | xargs -n1 -I '{}' llvm-profdata-7 merge {}.profraw -o {}.profdata
    ls *_test | xargs -n1 -I '{}' sh -c 'printf "\n*** Binary: {} ***\n "; llvm-cov-7 report -object {} -instr-profile {}.profdata -ignore-filename-regex="(boost|openenclave|3rdparty|/test/)"'
  displayName: Coverage
  workingDirectory: build
