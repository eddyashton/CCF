- name: Include vars
  include_vars: common.yml

- name: Download Open Enclave source
  get_url:
    url: "{{ oe_url }}"
    dest: "{{ workspace }}/{{ oe_src }}"
    force: yes
  become: true

- name: Remove Pre-existing Open Enclave source on the remote
  file:
    path: "{{ workspace }}/openenclave-{{ oe_ver }}"
    state: absent

- name: Create directory for Open Enclave source
  file:
    path: "{{ workspace }}/openenclave-{{ oe_ver }}"
    state: directory

- name: Expand Open Enclave
  unarchive:
    src: "{{ workspace }}/{{ oe_src }}"
    dest: "{{ workspace }}/openenclave-{{ oe_ver }}"
    copy: no
    extra_opts: [--strip-components=1]
    creates: "{{ workspace }}/openenclave-{{ oe_ver }}/CMakeLists.txt"

- name: Make Open Enclave build dir
  file:
    path: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
    state: directory

# Open Enclave turns on the Clang speculative load hardening pass by default.
# This is good practice for arbitrary enclaved code, as it applies a general
# mitigation that does not depend on source code annotation. However, being
# a general mitigation, it also carries about a 30% performance penalty when
# measured on various CCF benchmarks. To recover this performance, CCF
# disables the general mitigation and relies on audited code, targeting the
# specific vulnerable loads.

- name: Disable Compiler-level Spectre mitigations
  replace:
    path: "{{ workspace }}/openenclave-{{ oe_ver }}/cmake/compiler_settings.cmake"
    regexp: '-mllvm -x86-speculative-load-hardening'
    replace: ''

- name: Install Open Enclave dependencies
  shell: |
    scripts/ansible/install-ansible.sh
    ansible-playbook "{{ oe_playbook }}"
  args:
    chdir: "{{ workspace }}/openenclave-{{ oe_ver }}"
  become: true
  async: 600
  poll: 5

- name: Install ninja
  apt:
    name: ninja-build
  become: true

- name: Make Open Enclave build dir
  file:
    path: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
    state: directory

- name: Build Open Enclave
  shell: |
    cmake -GNinja -DCMAKE_INSTALL_PREFIX:PATH={{ oe_prefix }} -DCMAKE_BUILD_TYPE=RelWithDebInfo {{ oe_build_opts }} ..
    ninja
  args:
    chdir: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
  async: 600
  poll: 5

- name: Remove Pre-existing Open Enclave install
  file:
    path: "{{ oe_prefix }}"
    state: absent
  become: true

- name: Install Open Enclave
  command: ninja install
  args:
    chdir: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
  become: true