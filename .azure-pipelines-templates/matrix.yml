parameters:
  consensus: ['CFT', 'BFT']
  target: ['NoSGX', 'SGX']
  protocol: ['FTCP', 'HTTP']

  env:
    NoSGX:
      container: nosgx
      pool: Ubuntu-1804-D8s_v3
    SGX:
      container: sgx
      pool: Ubuntu-1804-DC4s
    NoSGX_SAN:
      container: nosgx
      pool: Ubuntu-1804-D16s_v3
    CIMetrics:
      container: nosgx
      pool: Ubuntu-1804-D8s_v3
      dependsOn: ['BuildAndTest_SGX_CFT_FTCP_Perf', 'BuildAndTest_SGX_BFT_FTCP_Perf', 'BuildAndTest_SGX_CFT_HTTP_Perf', 'BuildAndTest_SGX_BFT_HTTP_Perf']

  build:
    common:
      cmake_args: '-DCMAKE_C_COMPILER_LAUNCHER="ccache" -DCMAKE_CXX_COMPILER_LAUNCHER="ccache"'
    NoSGX:
      cmake_args: '-DTARGET=virtual -DCOVERAGE=ON'
    SGX:
      cmake_args: ''
    BFT:
      cmake_args: '-DPBFT=ON'
    CFT:
      cmake_args: ''
    debug:
      cmake_args: '-DCMAKE_BUILD_TYPE=Debug -DBUILD_SMALLBANK=OFF'
    perf:
      FTCP:
        cmake_args: '-DSERVICE_IDENTITY_CURVE_CHOICE=secp256k1_bitcoin'
      HTTP:
        cmake_args: ''
    san:
      cmake_args: '-DSAN=ON'
    FTCP:
      cmake_args: ''
    HTTP:
      cmake_args: '-DHTTP=ON'

  test:
    NoSGX:
      ctest_args: '-LE "benchmark|perf|suite"'
    SGX:
      ctest_args: '-LE "benchmark|perf"'
    perf:
      CFT:
        ctest_args: '-L "benchmark|perf"'
      BFT:
        ctest_args: '-L "perf"'
    san:
      ctest_args: '-LE "benchmark|perf|suite"'

  static_check_job_name: 'Formatting_and_License_Checks'

  san_target: 'NoSGX'
  checks_target: 'NoSGX'

jobs:
  - template: checks.yml
    parameters:
      env: ${{ parameters.env[parameters.checks_target] }}
      job_name: ${{ parameters.static_check_job_name }}

  # Debug builds with code coverage, run all tests except performance
  - ${{ each target in parameters.target }}:
    - ${{ each consensus in parameters.consensus }}:
      - ${{ each protocol in parameters.protocol }}:
        - template: common.yml
          parameters:
            target: ${{ target }}
            consensus: ${{ consensus }}
            protocol: ${{ protocol }}
            env: ${{ parameters.env[target] }}
            cmake_args: '${{ parameters.build.common.cmake_args }} ${{ parameters.build.debug.cmake_args }} ${{ parameters.build[target].cmake_args }} ${{ parameters.build[consensus].cmake_args }} ${{ parameters.build[protocol].cmake_args }}'
            ctest_filter: '${{ parameters.test[target].ctest_args }}'
            suffix: ''
            depends_on: ${{ parameters.static_check_job_name }}

  # SAN builds (ASAN & UBSAN), run all tests except performance
  - ${{ each consensus in parameters.consensus }}:
    - template: common.yml
      parameters:
        target: ${{ parameters.san_target }}
        consensus: ${{ consensus }}
        protocol: FTCP
        env: '${{ parameters.env.NoSGX_SAN }}'
        cmake_args: '${{ parameters.build.common.cmake_args }} ${{ parameters.build.san.cmake_args }} ${{ parameters.build[parameters.san_target].cmake_args }} ${{ parameters.build[consensus].cmake_args }}'
        ctest_filter: '${{ parameters.test.san.ctest_args }}'
        suffix: 'SAN'
        depends_on: ${{ parameters.static_check_job_name }}

  # Optimised builds, only run performance tests
  - ${{ each consensus in parameters.consensus }}:
    - ${{ each protocol in parameters.protocol }}:
      - template: common.yml
        parameters:
          target: SGX
          consensus: ${{ consensus }}
          protocol: ${{ protocol }}
          env: ${{ parameters.env.SGX }}
          cmake_args: '${{ parameters.build.common.cmake_args }} ${{ parameters.build.perf[protocol].cmake_args }} ${{ parameters.build.SGX.cmake_args }} ${{ parameters.build[consensus].cmake_args }} ${{ parameters.build[protocol].cmake_args }}'
          ctest_filter: '${{ parameters.test.perf[consensus].ctest_args }}'
          suffix: 'Perf'
          depends_on: ${{ parameters.static_check_job_name }}
  
  - template: cimetrics.yml
    parameters:
      env: ${{ parameters.env.CIMetrics }}